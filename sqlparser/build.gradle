import org.apache.tools.ant.taskdefs.condition.Os

dependencies {
    implementation project(':common')
    implementation('org.antlr:antlr4-runtime:4.8-1')
    implementation('org.apache.commons:commons-lang3:3.10')
}

def mysqlDir = 'src/main/java/sjtu/ipads/wtune/sqlparser/mysql/internal'
def pgDir = 'src/main/java/sjtu/ipads/wtune/sqlparser/pg/internal'
def genDir = 'src/gen/'
def resourceDir = 'src/main/resources'

task antlrMysql(type: Exec) {
    if (!file("$mysqlDir/MySQLLexer.java").exists() || !file("$mysqlDir/MySQLParser.java").exists()) {
        workingDir resourceDir
        if (Os.isFamily(Os.FAMILY_WINDOWS))
            commandLine 'powershell', 'java', '-Xmx1024m', '-jar', "$rootDir\\scripts\\antlr-4.8-complete.jar",
                    '-Dlanguage=Java', '-no-listener', '-visitor', '-o', "../../../$genDir",
                    '-package', 'sjtu.ipads.wtune.sqlparser.mysql.internal', 'MySQLLexer.g4', 'MySQLParser.g4'
        else
            commandLine 'java', '-Xmx1024m', '-jar', "$rootDir/scripts/antlr-4.8-complete.jar",
                    '-Dlanguage=Java', '-no-listener', '-visitor', '-o', "../../../$genDir",
                    '-package', 'sjtu.ipads.wtune.sqlparser.mysql.internal', 'MySQLLexer.g4', 'MySQLParser.g4'
    } else {
        if (Os.isFamily(Os.FAMILY_WINDOWS))
            commandLine 'powershell', 'echo', '\'use generated\''
        else
            commandLine 'echo', '\'use generated\''
    }
}

task antlrPg(type: Exec) {
    if (!file("$pgDir/PGLexer.java").exists() || !file("$pgDir/PGParser.java").exists()) {
        workingDir resourceDir
        if (Os.isFamily(Os.FAMILY_WINDOWS))
            commandLine 'powershell', 'java', '-Xmx1024m', '-jar', "$rootDir\\scripts\\antlr-4.8-complete.jar",
                    '-Dlanguage=Java', '-no-listener', '-visitor', '-o', "../../../$genDir",
                    '-package', 'sjtu.ipads.wtune.sqlparser.pg.internal', 'PGLexer.g4', 'PGParser.g4'
        else
            commandLine 'java', '-Xmx1024m', '-jar', "$rootDir/scripts/antlr-4.8-complete.jar",
                    '-Dlanguage=Java', '-no-listener', '-visitor', '-o', "../../../$genDir",
                    '-package', 'sjtu.ipads.wtune.sqlparser.pg.internal', 'PGLexer.g4', 'PGParser.g4'
    } else {
        if (Os.isFamily(Os.FAMILY_WINDOWS))
            commandLine 'powershell', 'echo', '\'use generated\''
        else
            commandLine 'echo', '\'use generated\''
    }
}

task copyMysql(type: Copy) {
    dependsOn antlrMysql
    if (!file("$mysqlDir/MySQLLexer.java").exists() || !file("$mysqlDir/MySQLParser.java").exists()) {
        from(genDir) {
            include 'MySQL*.java'
        }
        into(mysqlDir)
    }
}

task copyPg(type: Copy) {
    dependsOn antlrPg
    if (!file("$pgDir/PGLexer.java").exists() || !file("$pgDir/PGParser.java").exists()) {
        from(genDir) {
            include 'PG*.java'
        }
        into(pgDir)
    }
}

task removeMysql(type: Delete) {
    delete fileTree(genDir)
    delete fileTree(mysqlDir) {
        include "MySQLLexer.java"
        include "MySQLParser.java"
        include "MySQLParserBaseVisitor.java"
        include "MySQLParserVisitor.java"
    }
}

task removePg(type: Delete) {
    delete fileTree(genDir)
    delete fileTree(pgDir) {
        include "PGLexer.java"
        include "PGParser.java"
        include "PGParserBaseVisitor.java"
        include "PGParserVisitor.java"
    }
}

cleanAll.dependsOn removeMysql
cleanAll.dependsOn removePg
compileJava.dependsOn copyMysql
compileJava.dependsOn copyPg
